<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "eshop_coupon".
 *
 * @property integer $id
 * @property integer $is_deleted
 * @property string $code
 * @property string $account
 * @property string $character
 * @property integer $category
 * @property integer $eshop_item_id
 * @property integer $item_id
 * @property integer $is_used
 * @property integer $allow_multiple_use
 * @property integer $allow_use_with_other_coupons
 * @property integer $use_count
 * @property integer $discount
 * @property integer $minimum_amount
 * @property string $use_before
 * @property string $use_after
 * @property string $meta
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \common\models\EshopItem $eshopItem
 * @property \common\models\Item $item
 * @property \common\models\EshopOrderAppliedCoupon[] $eshopOrderAppliedCoupons
 * @property string $aliasModel
 */
abstract class EshopCoupon extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'eshop_coupon';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['is_deleted', 'category', 'eshop_item_id', 'item_id', 'is_used', 'allow_multiple_use', 'allow_use_with_other_coupons', 'use_count', 'discount', 'minimum_amount'], 'integer'],
            [['code'], 'required'],
            [['code', 'account', 'character', 'meta'], 'string'],
            [['use_before', 'use_after'], 'safe'],
            [['code'], 'unique'],
            [['eshop_item_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\EshopItem::className(), 'targetAttribute' => ['eshop_item_id' => 'id']],
            [['item_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Item::className(), 'targetAttribute' => ['item_id' => 'item_id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'is_deleted' => 'Is Deleted',
            'code' => 'Code',
            'account' => 'Account',
            'character' => 'Character',
            'category' => 'Category',
            'eshop_item_id' => 'Eshop Item ID',
            'item_id' => 'Item ID',
            'is_used' => 'Is Used',
            'allow_multiple_use' => 'Allow Multiple Use',
            'allow_use_with_other_coupons' => 'Allow Use With Other Coupons',
            'use_count' => 'Use Count',
            'discount' => 'Discount',
            'minimum_amount' => 'Minimum Amount',
            'use_before' => 'Use Before',
            'use_after' => 'Use After',
            'meta' => 'Meta',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEshopItem()
    {
        return $this->hasOne(\common\models\EshopItem::className(), ['id' => 'eshop_item_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getItem()
    {
        return $this->hasOne(\common\models\Item::className(), ['item_id' => 'item_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEshopOrderAppliedCoupons()
    {
        return $this->hasMany(\common\models\EshopOrderAppliedCoupon::className(), ['eshop_coupon_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\EshopCouponQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\EshopCouponQuery(get_called_class());
    }


}
