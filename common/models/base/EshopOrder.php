<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "eshop_order".
 *
 * @property integer $id
 * @property string $account
 * @property integer $is_delivered
 * @property string $delivered_to
 * @property double $current_value
 * @property double $discount
 * @property string $meta
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \common\models\EshopOrderAppliedCoupon[] $eshopOrderAppliedCoupons
 * @property \common\models\EshopOrderItem[] $eshopOrderItems
 * @property string $aliasModel
 */
abstract class EshopOrder extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'eshop_order';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['account'], 'required'],
            [['account', 'delivered_to', 'meta'], 'string'],
            [['is_delivered'], 'integer'],
            [['current_value', 'discount'], 'number']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'account' => 'Account',
            'is_delivered' => 'Is Delivered',
            'delivered_to' => 'Delivered To',
            'current_value' => 'Current Value',
            'discount' => 'Discount',
            'meta' => 'Meta',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEshopOrderAppliedCoupons()
    {
        return $this->hasMany(\common\models\EshopOrderAppliedCoupon::className(), ['eshop_order_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEshopOrderItems()
    {
        return $this->hasMany(\common\models\EshopOrderItem::className(), ['eshop_order_id' => 'id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\EshopOrderQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\EshopOrderQuery(get_called_class());
    }


}
