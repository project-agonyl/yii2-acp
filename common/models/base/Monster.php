<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "monster".
 *
 * @property integer $id
 * @property string $name
 * @property integer $monster_id
 * @property integer $respawn_time
 * @property integer $level
 * @property integer $attack
 * @property integer $defense
 * @property integer $hp
 * @property string $meta
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \common\models\MapMonster[] $mapMonsters
 * @property \common\models\MonsterItem[] $monsterItems
 * @property string $aliasModel
 */
abstract class Monster extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'monster';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'monster_id'], 'required'],
            [['name', 'meta'], 'string'],
            [['monster_id', 'respawn_time', 'level', 'attack', 'defense', 'hp'], 'integer'],
            [['monster_id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'monster_id' => 'Monster ID',
            'respawn_time' => 'Respawn Time',
            'level' => 'Level',
            'attack' => 'Attack',
            'defense' => 'Defense',
            'hp' => 'Hp',
            'meta' => 'Meta',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMapMonsters()
    {
        return $this->hasMany(\common\models\MapMonster::className(), ['monster_id' => 'monster_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMonsterItems()
    {
        return $this->hasMany(\common\models\MonsterItem::className(), ['monster_id' => 'monster_id']);
    }


    
    /**
     * @inheritdoc
     * @return \common\models\query\MonsterQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\query\MonsterQuery(get_called_class());
    }


}
